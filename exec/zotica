#!/usr/bin/env ruby
# coding: utf-8


require 'optparse'
require 'zotica'
include Zenithal


class Executor

  def initialize(args)
    @mode, @options, @paths = nil, {}, []
    parser = OptionParser.new
    parser.on("-o PATH") do |value|
      @options[:output_path] = value
    end
    parser.on("-m NAME") do |value|
      @options[:math_macro_name] = value
    end
    parser.on("-r NAME") do |value|
      @options[:raw_macro_name] = value
    end
    parser.on("-c NAME") do |value|
      @options[:resource_macro_name] = value
    end
    parser.on("-f PATH") do |value|
      @options[:font_path] = value
    end
    parser.on("-s") do
      @mode = :simple
    end
    @paths = parser.parse(args)
  end

  def execute
    case @mode
    when :simple
      convert(true)
    else
      convert(false)
    end
  end

  def convert(only_math = false)
    unless @paths.empty?
      source = File.read(@paths.first)
    else
      source = STDIN.read
    end
    parser = ZoticaParser.new(source)
    parser.simple_math_macro_name = @options[:math_macro_name] || "m"
    parser.raw_macro_name = @options[:raw_macro_name] || "raw"
    parser.resource_macro_name = @options[:resource_macro_name] || "math-resource"
    parser.only_math = only_math
    parser.load_font(@options[:font_path])
    document = parser.parse
    converter = ZenithalConverter.simple_html(document)
    output = converter.convert
    if @options[:output_path]
      File.write(@options[:output_path], output)
    else
      STDOUT.print(output)
    end
  end

end


executor = Executor.new(ARGV)
executor.execute